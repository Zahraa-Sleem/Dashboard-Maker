@model DashboardMaker.Models.DataSource;


<style>
	body {
		background-color: #e9ecef;
	}

	.header {
		text-align: center;
		margin-bottom: 20px;
		background-color: #343a40;
		color: #ffffff;
		padding: 10px;
	}

	.container {
		background-color: #ffffff;
		margin-top: 50px;
		padding: 20px;
		border-radius: 10px;
	}

	.form-group label {
		color: #495057;
		font-weight: bold;
		margin-bottom: 5px;
		background-color: #f8f9fa;
		padding: 5px;
		border-radius: 5px;
	}

	.form-group .form-check-label {
		font-weight: normal;
		background-color: transparent;
	}

</style>

@if (Model != null && Model.Id != 0)
{
	<div class="header">
		<h4>Edit Data Source</h4>
	</div>
    
}
else
{
	<div class="header">
		<h4>Add Data Source</h4>
	</div>
}


<div class="container">
	<div class="row justify-content-center">
		<div class="col-md-8">
			<form asp-action="Save" asp-controller="DataSource" method="post" enctype="multipart/form-data">
				<div class="form-group">
					<label asp-for="SourceName" class="control-label">Source Name</label>
					<input asp-for="SourceName" type="text" class="form-control" />
					<span asp-validation-for="SourceName" class="text-danger"></span>
				</div>

				<br />

				<div class="form-group">
					<label asp-for="DataSourceType" class="control-label">Data Source Type</label>
					<div class="form-check">
						<div class="row">
							<div class="col-md-4">
								<label class="form-check-label">
									<input asp-for="DataSourceType" type="radio" value="Excel File" class="form-check-input" />
									Excel File
								</label>
							</div>
							<div class="col-md-4">
								<label class="form-check-label">
									<input asp-for="DataSourceType" type="radio" value="MySQL Database" class="form-check-input database-option" />
									MySQL Database
								</label>
							</div>
							<div class="col-md-4">
								<label class="form-check-label">
									<input asp-for="DataSourceType" type="radio" value="SQL Database" class="form-check-input database-option" />
									SQL Database
								</label>
							</div>
						</div>
					</div>
				</div>

				@* **********  Hidden Inputs    **********  *@
				<input asp-for="Id" type="hidden"/>
				<input asp-for="ConnectionString" type="hidden" id="ConnectionString" />
				<input asp-for="FileName" type="hidden" id="FileName" />
				<input asp-for="FileData" type="hidden" id="FileData" />

				@* ********* Divs based on selection *******@

				<div id="DatabaseFields" style="display: @(Model.DataSourceType == "MySQL Database" || Model.DataSourceType == "SQL Database" ? "block" : "none")">
					<div class="row">
						<div class="form-group col-md-6">
							<label for="Host">Host</label>
							<input id="Host" name="Host" type="text" class="form-control" />
						</div>
						<div class="form-group col-md-6">
							<label for="Port">Port</label>
							<input id="Port" name="Port" type="text" class="form-control" />
						</div>
					</div>
					<div class="row">
						<div class="form-group col-md-6">
							<label for="Username">Username</label>
							<input id="Username" name="Username" type="text" class="form-control" />
						</div>
						<div class="form-group col-md-6">
							<label for="Password">Password</label>
							<input id="Password" name="Password" type="text" class="form-control" />
						</div>
					</div>
					<div class="row">
						<div class="form-group col-md-6">
							<label for="Database">Database Name</label>
							<input id="Database" name="Database" type="text" class="form-control" />
						</div>
					</div>
				</div>

				<div id="ExcelFields" style="display:@(Model.DataSourceType == "Excel File" ? "block" : "none")">
					<div class="form-group">
						<label for="File">File</label>
						<input id="File" name="File" type="file" class="form-control" accept=".xlsx, .xls" />
					</div>
				</div>

				<br />

				<div class="form-group">
					<button type="submit" class="btn btn-primary btn-block" style="background-color: #343a40;">Save</button>
				</div>

			</form>
		</div>
	</div>
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/js/xlsx.full.min.js"></script>

<script>
	$(document).ready(function () {
		$(".database-option").change(function () {
			$("#DatabaseFields, #ExcelFields").hide();

			if ($(this).val() === "MySQL Database" || $(this).val() === "SQL Database") {
				$("#DatabaseFields").show();
			} else if ($(this).val() === "Excel File") {
				$("#ExcelFields").show();
			}
		});

		// Add an additional event handler for the "Excel File" radio button
		$("input[value='Excel File']").change(function () {
			$("#DatabaseFields").hide();
			$("#ExcelFields").show();
		});

		// Add event handler for database fields input changes
		$(".database-option, #Host, #Port, #Username, #Password, #Database").change(function () {
			updateCredentials();
		});

		// Function to update hidden input with credentials
		function updateCredentials() {
			var host = $("#Host").val();
			var port = $("#Port").val();
			var username = $('#Username').val();
			var password = $('#Password').val();
			var database = $('#Database').val();

			$("#ConnectionString").val(`Server=${host};User=${username};Password=${password};Database=${database}`);
		}

		// Add event handler for file input changes
		$("#File").change(function () {
			readExcel();
		});
		function readExcel() {
			var fileInput = document.getElementById('File');
			var file = fileInput.files[0];

			if (file) {
				var reader = new FileReader();

				reader.onload = function (e) {
					// Read the Excel file
					var data = new Uint8Array(e.target.result);
					var workbook = XLSX.read(data, { type: 'array' });

					$("#FileName").val(file.name)

					// Assume the first sheet is the one you want to convert
					var sheetName = workbook.SheetNames[0];
					var excelData = XLSX.utils.sheet_to_json(workbook.Sheets[sheetName]);

					// Display the JSON data (you can customize this part)
					console.log('Excel Data:', excelData);

					// Convert JSON data to string and update the hidden input
					var jsonData = JSON.stringify(excelData);
					$("#FileData").val(jsonData);
				};

				reader.readAsArrayBuffer(file);
			}
		}
	});
</script>


